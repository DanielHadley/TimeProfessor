geom_line(colour=lime_green, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=2) +
annotate("text", x=as.Date("2014-10-24"), y=73, label="Recharged?", size=2) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=2) +
annotate("text", x=as.Date("2014-04-20"), y=39, label="Easter, Surfing", size=2)
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=lime_green, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=2) +
annotate("text", x=as.Date("2014-10-24"), y=73, label="Recharged?", size=2) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=2) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=2)
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=lime_green, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=2) +
annotate("text", x=as.Date("2014-10-24"), y=73, label="Recharged?", size=2) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=2) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=2) +
annotate("text", x=as.Date("2014-11-20"), y=81, label="MESA Conference", size=2) +
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=lime_green, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=2) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=2) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=2) +
annotate("text", x=as.Date("2014-11-20"), y=81, label="MESA Conference", size=2) +
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=lime_green, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=2) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=2) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=2) +
annotate("text", x=as.Date("2014-11-20"), y=82, label="MESA Conference", size=2) +
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
weekly <- d %>%
group_by(weekNumber) %>%
summarize(weeklyWork=sum(workTotal), weekEnding = max(date))
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=lime_green, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=1) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=1) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=1) +
annotate("text", x=as.Date("2014-11-20"), y=82, label="MESA Conference", size=1) +
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=lime_green, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=1.5) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=1.5) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=1.5) +
annotate("text", x=as.Date("2014-11-20"), y=82, label="MESA Conference", size=1.5) +
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
dat$year<-as.numeric(as.POSIXlt(dat$date)$year+1900)
# the month too
dat$month<-as.numeric(as.POSIXlt(dat$date)$mon+1)
# but turn months into ordered facors to control the appearance/ordering in the presentation
dat$monthf<-factor(dat$month,levels=as.character(1:12),labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
# the day of week is again easily found
dat$weekday = as.POSIXlt(dat$date)$wday
dat$year<-year(dat$day)
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
d$year<-year(d$day)
# the month too
d$month<-as.numeric(as.POSIXlt(d$de)$mon+1)
# but turn months into ordered facors to control the appearance/ordering in the presentation
d$monthf<-factor(d$month,levels=as.character(1:12),labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
# the day of week is again easily found
d$weekday = as.POSIXlt(d$de)$wday
# again turn into factors to control appearance/abbreviation and ordering
# I use the reverse function rev here to order the week top down in the graph
# you can cut it out to reverse week order
d$weekdayf<-factor(d$weekday,levels=rev(1:7),labels=rev(c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")),ordered=TRUE)
# the monthweek part is a bit trickier
# first a factor which cuts the da into month chunks
d$yearmonth<-as.yearmon(d$date)
d$yearmonthf<-factor(d$yearmonth)
# then find the "week of year" for each day
d$week <- as.numeric(format(d$date,"%W"))
# and now for each monthblock we normalize the week to start at 1
d<-ddply(d,.(yearmonthf),transform,monthweek=1+week-min(week))
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
d$year<-year(d$day)
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
d$year<-year(d$date)
d$year<-year(d$date)
# the month too
d$month<-month(d$date)
# but turn months into ordered facors to control the appearance/ordering in the presentation
d$monthf<-factor(d$month,levels=as.character(1:12),labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
# the day of week is again easily found
d$weekday = as.POSIXlt(d$de)$wday
d$day
View(dat)
d$weekday = wday(d$date)
d$weekday
d$weekday = wday(d$date, label = TRUE)
d$weekday
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
d$year<-year(d$date)
# the month too
d$month<-month(d$date)
# but turn months into ordered facors to control the appearance/ordering in the presentation
d$monthf<-factor(d$month,levels=as.character(1:12),labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
# the day of week is again easily found
d$weekday = wday(d$date, label = TRUE)
# again turn into factors to control appearance/abbreviation and ordering
# I use the reverse function rev here to order the week top down in the graph
# you can cut it out to reverse week order
d$weekdayf<-factor(d$weekday,levels=rev(1:7),labels=rev(c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun")),ordered=TRUE)
# the monthweek part is a bit trickier
# first a factor which cuts the da into month chunks
d$yearmonth<-as.yearmon(d$date)
d$yearmonthf<-factor(d$yearmonth)
# then find the "week of year" for each day
d$week <- as.numeric(format(d$date,"%W"))
# and now for each monthblock we normalize the week to start at 1
d<-ddply(d,.(yearmonthf),transform,monthweek=1+week-min(week))
d
d$yearmonth<-paste(d$year, d$month)
d$yearmonth
d$yearmonthf<-factor(d$yearmonth)
# first a factor which cuts the da into month chunks
d$yearmonth<-paste(d$year, d$month)
d$yearmonthf<-factor(d$yearmonth)
# then find the "week of year" for each day
d$week <- week(d$date)
d<-ddply(d,.(yearmonthf),transform,monthweek=1+week-min(week))
# Now for the plot
P<- ggplot(d, aes(monthweek, weekdayf, fill = VIX.Close)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="red", high="yellow") +
opts(title = "Time-Series Calendar Heatmap") +  xlab("Week of Month") + ylab("")
P
P<- ggplot(d, aes(monthweek, weekdayf, fill = workTotal))
+
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="red", high="yellow") +
opts(title = "Time-Series Calendar Heatmap") +  xlab("Week of Month") + ylab("")
P
P<- ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white")
+ facet_grid(year~monthf)
library(plyr)
d<-ddply(d,.(yearmonthf),transform,monthweek=1+week-min(week))
# Now for the plot
P<- ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="red", high="yellow") +
opts(title = "Time-Series Calendar Heatmap") +  xlab("Week of Month") + ylab("")
# Now for the plot
P<- ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="red", high="yellow") +
ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week")
P
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="red", high="yellow") +
ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week")
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=1)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
summary(d$workTotal)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab(Week of Month") +
ylab("Average Daily Hours")
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
d$year<-year(d$date)
# the month too
d$month<-month(d$date)
# but turn months into ordered facors to control the appearance/ordering in the presentation
d$monthf<-factor(d$month,levels=as.character(1:12),labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
# the day of week is again easily found
d$weekday = wday(d$date, label = TRUE)
# again turn into factors to control appearance/abbreviation and ordering
# I use the reverse function rev here to order the week top down in the graph
# you can cut it out to reverse week order
d$weekdayf<-factor(d$weekday,levels=rev(1:7),labels=rev(c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun")),ordered=TRUE)
# the monthweek part is a bit trickier
# first a factor which cuts the da into month chunks
d$yearmonth<-paste(d$year, d$month)
d$yearmonthf<-factor(d$yearmonth)
# then find the "week of year" for each day
d$week <- week(d$date)
# and now for each monthblock we normalize the week to start at 1
d<-ddply(d,.(yearmonthf),transform,monthweek=1+week-min(week))
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab(Week of Month") +
ylab("Average Daily Hours")
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab("Week of Month") +
ylab("Average Daily Hours")
d<-ddply(d,.(yearmonthf),transform,monthweek=1+week-min(week))
View(d)
d$weekdayf<-factor(d$weekday,levels=rev(1:7),labels=rev(c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun")),ordered=TRUE)
d$weekdayf
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
d$year<-year(d$date)
# the month too
d$month<-month(d$date)
# but turn months into ordered facors to control the appearance/ordering in the presentation
d$monthf<-factor(d$month,levels=as.character(1:12),labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
# the day of week is again easily found
d$weekday = wday(d$date)
# again turn into factors to control appearance/abbreviation and ordering
# I use the reverse function rev here to order the week top down in the graph
# you can cut it out to reverse week order
d$weekdayf<-factor(d$weekday,levels=rev(1:7),labels=rev(c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun")),ordered=TRUE)
# the monthweek part is a bit trickier
# first a factor which cuts the da into month chunks
d$yearmonth<-paste(d$year, d$month)
d$yearmonthf<-factor(d$yearmonth)
# then find the "week of year" for each day
d$week <- week(d$date)
# and now for each monthblock we normalize the week to start at 1
d<-ddply(d,.(yearmonthf),transform,monthweek=1+week-min(week))
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab("Week of Month") +
ylab("Average Daily Hours")
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab("Week of Month")
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab("Week of Month") +
ylab()
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab("Week of Month") +
ylab(blank)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab("Week of Month") +
ylab=NULL
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Weekly Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
View(d)
d <- d[1:364]
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
d <- d[1:364,]
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
View(d)
d$week
d$week <- week(d$date)
d$week
View(d)
mutate(d, monthweek = ceiling(day(date) / 7))
View(d)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
d$monthweek = ceiling(day(d$date) / 7)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=2)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=5, height=3)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of Month") +
ylab(NULL)
ggsave("./plots/weeklyHeat.png", dpi=300, width=6, height=3)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of The Month") +
ylab(NULL) + labs(fill="Hours Worked")
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of The Month") +
ylab(NULL) + labs(fill="Hours Worked")
ggsave("./plots/weeklyHeat.png", dpi=300, width=6, height=3)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of The Month") +
ylab(NULL) + labs(fill="Hours Worked") +
theme(text = element_text(size=20), axis.text.x = element_text(angle=90, vjust=1))
ggsave("./plots/weeklyHeat.png", dpi=300, width=6, height=3)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of The Month") +
ylab(NULL) + labs(fill="Hours Worked") +
theme(text = element_text(size=20), axis.text=element_text(size=6))
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of The Month") +
ylab(NULL) + labs(fill="Hours Worked") +
theme(axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1)) # Uncomment if X-axis unreadable
ggsave("./plots/weeklyHeat.png", dpi=300, width=6, height=3)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of The Month") +
ylab(NULL) + labs(fill="Hours Worked") +
theme(axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12)) # Enlarge, left-align title
ggsave("./plots/weeklyHeat.png", dpi=300, width=6, height=3)
####  Visualize ####
weekly <- d %>%
group_by(weekNumber) %>%
summarize(weeklyWork=sum(workTotal), weekEnding = max(date))
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=pinkish_red, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=1.5) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=1.5) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=1.5) +
annotate("text", x=as.Date("2014-11-20"), y=82, label="MESA Conference", size=1.5) +
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
### Heatmap!
# We will facet by year ~ month, and each subgraph will
# show week-of-month versus weekday
# the year is simple
d$year<-year(d$date)
# the month too
d$month<-month(d$date)
# but turn months into ordered facors to control the appearance/ordering in the presentation
d$monthf<-factor(d$month,levels=as.character(1:12),labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
# the day of week is again easily found
d$weekday = wday(d$date)
# again turn into factors to control appearance/abbreviation and ordering
# I use the reverse function rev here to order the week top down in the graph
# you can cut it out to reverse week order
d$weekdayf<-factor(d$weekday,levels=rev(1:7),labels=rev(c("Mon","Tues","Wed","Thurs","Fri","Sat","Sun")),ordered=TRUE)
# the monthweek part is a bit trickier
# first a factor which cuts the da into month chunks
d$yearmonth<-paste(d$year, d$month)
d$yearmonthf<-factor(d$yearmonth)
# then find the "week of year" for each day
d$week <- week(d$date)
# and now for each monthblock we normalize the week to start at 1
d$monthweek = ceiling(day(d$date) / 7)
# Now for the plot
ggplot(d, aes(monthweek, weekdayf, fill = workTotal)) +
geom_tile(colour = "white") + facet_grid(year~monthf) + scale_fill_gradient(low="yellow", high="red") +
ggtitle("Daily Work Hours, 2014") + xlab("Week of The Month") +
ylab(NULL) + labs(fill="Hours Worked") +
theme(axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12)) # Enlarge, left-align title
ggsave("./plots/weeklyHeat.png", dpi=300, width=6, height=3)
## read in the data (change to your own directory of course)
dat <- read.csv("C:/Users/dhadley/Documents/GitHub/TimeProfessor/timecard_10jan2015.csv",as.is=T)
head(dat)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(stringr)
library(lubridate)
##Some notes about the data
## The first column has either the date (for days) or a lable for the row (GOALS for my weekly goals, Total, etc)
## "day" is the day of the week
## "research" is hours devoted to my own research
## "arabic" is Arabic practice of some kind
## "book" is research directly on my book, though sometimes I forget to mark this column
## "teaching" is any time related to teaching, both in and out of class
## "service" is service to the department: meetings, committees
## "other" is all other work
## "freethink" is ideally staring out the window and thinking creatively.  but sometimes it's just daydreaming
## "total" is the summed total of the row.  This was automaticly calculated in my google doc
## "time" is a column I use to note the time I last updated the spreadsheet.  As such, it also (usually) indicates the time I stopped working on a given day.
## "activities" are things of note I did on this day.  It's not comprehensive.
## "Sleep".  Prior to 2015, this variable has notes about times I stayed up really late or all nigth.  After 1 jan 2015, it has the times I slept and woke up.
## "Exercise" indicates my exercise.
#### Settings to make charts prettier ####
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
#### Munge ####
## subset to just the days
d <- dat[dat$day %in% c("S","M","T","W","Th","F"),]
## make them dates
as.Date(d$X,"%m/%d/%Y")
d$date <- as.Date(d$X,"%m/%d/%Y")
d <- d[order(d$date),]
## keep just 2014
d <- d[d$date >= as.Date("2014-01-01") & d$date <= as.Date("2014-12-31"),]
dim(d)
## fix a few vars that aren't numeric
d$teaching <- as.numeric(d$teaching)
d$service <- as.numeric(d$service)
## replace the NAs
d[is.na(d)] <- 0
# make tbl
d <- tbl_df(d)
# Add variables
d <- d %>%
mutate(workTotal = research + arabic + book + teaching + service + other + freethink,
weekNumber = week(date))
####  Visualize ####
weekly <- d %>%
group_by(weekNumber) %>%
summarize(weeklyWork=sum(workTotal), weekEnding = max(date))
ggplot(weekly, aes(x=weekEnding, y=weeklyWork)) +
geom_line(colour=pinkish_red, size = 1) +
my.theme + ggtitle("Weekly Work Hours, 2014") + xlab("Month") +
ylab("Hours Worked Per Week") +
scale_y_continuous(labels = comma) +
annotate("text", x=as.Date("2014-08-16"), y=24, label="Camping", size=1.5) +
annotate("text", x=as.Date("2014-03-29"), y=81, label="ISA Conference", size=1.5) +
annotate("text", x=as.Date("2014-04-20"), y=36, label="Easter, Surfing", size=1.5) +
annotate("text", x=as.Date("2014-11-20"), y=82, label="MESA Conference", size=1.5) +
ggsave("./plots/weekly.png", dpi=300, width=5, height=3)
